{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\michael\\\\Documents\\\\GitHub\\\\TrackIshi\\\\client\\\\src\\\\components\\\\page\\\\global\\\\Opinions\\\\EditOpinionButton.js\",\n    _s = $RefreshSig$();\n\nimport EditOpinion from \"./EditOpinion\";\nimport ShowMyOpinion from \"./ShowMyOpinion\";\nimport Modal from \"react-modal\";\nimport React, { useState } from \"react\";\nimport SuccessMessage from \"../../../messages/SuccessMessage\";\nimport { CSVLink } from \"react-csv\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"25%\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    overflow: \"auto\",\n    maxHeight: \"100vh\"\n  }\n};\nexport default function EditOpinionButton(props) {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  let tkufaNum = props.allDATA.Tkufa;\n  let TkufaYear = tkufaNum % 2 === 0 ? tkufaNum / 2 : tkufaNum / 2 + 0.5;\n  let tkufainYear = tkufaNum % 2 === 0 ? \"2\" : \"1\";\n  let yearString = TkufaYear.toString();\n  let countD = 0;\n\n  for (let i = 0; i < 4 - yearString.length; i++) countD++;\n\n  let addex = \"\";\n\n  for (let i = 0; i < countD; i++) addex = addex + \"0\";\n\n  let finilTkuda = tkufainYear + \".\" + addex + yearString;\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {}\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"OpinionOpen\",\n        onClick: openModal,\n        style: props.style,\n        children: finilTkuda\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n        data: new Array(props.allDATA2[props.i]),\n        className: \"OpinionOpen\",\n        children: \"\\u2B07\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onAfterOpen: afterOpenModal,\n        onRequestClose: closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        children: props.isGray === \"gray\" ? /*#__PURE__*/_jsxDEV(ShowMyOpinion, {\n          id: props.allDATA._id,\n          allDATA: props.allDATA,\n          forClosing: closeModal,\n          suc: setSuccessMessage,\n          setDidupdated: props.setDidupdated,\n          isGray: props.isGray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(EditOpinion, {\n          allOpinion: props.allDATA,\n          forClosing: closeModal,\n          suc: setSuccessMessage,\n          setDidupdated: props.setDidupdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        message: successMessage,\n        clear: () => setSuccessMessage(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(EditOpinionButton, \"w8hiwv+CPlqFbwLM5jAdd8ljl2c=\");\n\n_c = EditOpinionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOpinionButton\");","map":{"version":3,"sources":["C:/Users/michael/Documents/GitHub/TrackIshi/client/src/components/page/global/Opinions/EditOpinionButton.js"],"names":["EditOpinion","ShowMyOpinion","Modal","React","useState","SuccessMessage","CSVLink","customStyles","content","top","left","right","bottom","marginRight","transform","overflow","maxHeight","EditOpinionButton","props","modalIsOpen","setIsOpen","successMessage","setSuccessMessage","tkufaNum","allDATA","Tkufa","TkufaYear","tkufainYear","yearString","toString","countD","i","length","addex","finilTkuda","openModal","afterOpenModal","closeModal","style","Array","allDATA2","isGray","_id","setDidupdated"],"mappings":"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","sourcesContent":["import EditOpinion from \"./EditOpinion\";\nimport ShowMyOpinion from \"./ShowMyOpinion\";\nimport Modal from \"react-modal\";\nimport React, { useState } from \"react\";\nimport SuccessMessage from \"../../../messages/SuccessMessage\";\nimport { CSVLink } from \"react-csv\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"25%\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    overflow: \"auto\",\n    maxHeight: \"100vh\",\n  },\n};\n\nexport default function EditOpinionButton(props) {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  let tkufaNum = props.allDATA.Tkufa;\n  let TkufaYear = tkufaNum % 2 === 0 ? tkufaNum / 2 : tkufaNum / 2 + 0.5;\n  let tkufainYear = tkufaNum % 2 === 0 ? \"2\" : \"1\";\n  let yearString = TkufaYear.toString();\n  let countD = 0;\n  for (let i = 0; i < 4 - yearString.length; i++) countD++;\n  let addex = \"\";\n  for (let i = 0; i < countD; i++) addex = addex + \"0\";\n  let finilTkuda = tkufainYear + \".\" + addex + yearString;\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {}\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <>\n      <div>\n        <button className=\"OpinionOpen\" onClick={openModal} style={props.style}>\n          {finilTkuda}\n        </button>\n        <CSVLink\n          data={new Array(props.allDATA2[props.i])}\n          className=\"OpinionOpen\"\n        >\n          ⬇️\n        </CSVLink>\n      </div>\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          {props.isGray === \"gray\" ? (\n            <ShowMyOpinion\n              id={props.allDATA._id}\n              allDATA={props.allDATA}\n              forClosing={closeModal}\n              suc={setSuccessMessage}\n              setDidupdated={props.setDidupdated}\n              isGray={props.isGray}\n            />\n          ) : (\n            <EditOpinion\n              allOpinion={props.allDATA}\n              forClosing={closeModal}\n              suc={setSuccessMessage}\n              setDidupdated={props.setDidupdated}\n            />\n          )}\n        </Modal>\n      </div>\n\n      {successMessage && (\n        <>\n          {\" \"}\n          <br />\n          <SuccessMessage\n            message={successMessage}\n            clear={() => setSuccessMessage(null)}\n          />\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}