{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mnpcm\\\\Documents\\\\GitHub\\\\TrackIshi\\\\client\\\\src\\\\components\\\\page\\\\global\\\\Opinions\\\\EOCButtonOpinion.js\",\n    _s = $RefreshSig$();\n\nimport EditOrCreateOpinion from \"./EditOrCreateOpinion\";\nimport Modal from \"react-modal\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport domain from \"../../../../util/domain\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"25%\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    overflow: \"auto\",\n    maxHeight: \"100vh\"\n  }\n};\nexport default function OpinionSumu(props) {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    const getAllOpinions = async () => {\n      const allOpinionsRes = await Axios.get(`${domain}/opinion/getallhis/${props.oid}`);\n      setRes(allOpinionsRes.data);\n      setReady(true);\n    };\n\n    getAllOpinions();\n    let tkufaNum = res.Tkufa;\n    let TkufaYear = tkufaNum % 2 === 0 ? tkufaNum / 2 : tkufaNum / 2 + 0.5;\n    let tkufainYear = tkufaNum % 2 === 0 ? \"2\" : \"1\";\n    let yearString = TkufaYear.toString();\n    let countD = 0;\n\n    for (let i = 0; i < 4 - yearString.length; i++) countD++;\n\n    let addex = \"\";\n\n    for (let i = 0; i < countD; i++) addex = addex + \"0\";\n\n    let finilTkuda = tkufainYear + \".\" + addex + yearString;\n  }, []);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {}\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"OpinionOpen\",\n        onClick: openModal,\n        children: finilTkuda\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onAfterOpen: afterOpenModal,\n        onRequestClose: closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        children: /*#__PURE__*/_jsxDEV(EditOrCreateOpinion, {\n          id: props.oid,\n          forClosing: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OpinionSumu, \"CsaURq21ER5TIBqKTTUWmefSl7Q=\");\n\n_c = OpinionSumu;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpinionSumu\");","map":{"version":3,"sources":["C:/Users/mnpcm/Documents/GitHub/TrackIshi/client/src/components/page/global/Opinions/EOCButtonOpinion.js"],"names":["EditOrCreateOpinion","Modal","React","useState","useEffect","Axios","domain","customStyles","content","top","left","right","bottom","marginRight","transform","overflow","maxHeight","OpinionSumu","props","modalIsOpen","setIsOpen","successMessage","setSuccessMessage","ready","setReady","res","setRes","getAllOpinions","allOpinionsRes","get","oid","data","tkufaNum","Tkufa","TkufaYear","tkufainYear","yearString","toString","countD","i","length","addex","finilTkuda","openModal","afterOpenModal","closeModal"],"mappings":"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","sourcesContent":["import EditOrCreateOpinion from \"./EditOrCreateOpinion\";\r\nimport Modal from \"react-modal\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport domain from \"../../../../util/domain\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"25%\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"100vh\",\r\n  },\r\n};\r\n\r\nexport default function OpinionSumu(props) {\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  const [ready, setReady] = useState(false);\r\n  const [res, setRes] = useState();\r\n\r\n  useEffect(() => {\r\n    const getAllOpinions = async () => {\r\n      const allOpinionsRes = await Axios.get(\r\n        `${domain}/opinion/getallhis/${props.oid}`\r\n      );\r\n      setRes(allOpinionsRes.data);\r\n      setReady(true);\r\n    };\r\n    getAllOpinions();\r\n\r\n    let tkufaNum = res.Tkufa;\r\n    let TkufaYear = tkufaNum % 2 === 0 ? tkufaNum / 2 : tkufaNum / 2 + 0.5;\r\n    let tkufainYear = tkufaNum % 2 === 0 ? \"2\" : \"1\";\r\n    let yearString = TkufaYear.toString();\r\n    let countD = 0;\r\n    for (let i = 0; i < 4 - yearString.length; i++) countD++;\r\n    let addex = \"\";\r\n    for (let i = 0; i < countD; i++) addex = addex + \"0\";\r\n    let finilTkuda = tkufainYear + \".\" + addex + yearString;\r\n  }, []);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {}\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button className=\"OpinionOpen\" onClick={openModal}>\r\n          {finilTkuda}\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <EditOrCreateOpinion id={props.oid} forClosing={closeModal} />\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}